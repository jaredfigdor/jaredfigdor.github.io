{"version":3,"file":"slotmachine.min.js","mappings":"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","sources":["webpack://SlotMachine/webpack/universalModuleDefinition","webpack://SlotMachine/./node_modules/performance-now/lib/performance-now.js","webpack://SlotMachine/./node_modules/raf/index.js","webpack://SlotMachine/webpack/bootstrap","webpack://SlotMachine/webpack/runtime/compat get default export","webpack://SlotMachine/webpack/runtime/define property getters","webpack://SlotMachine/webpack/runtime/global","webpack://SlotMachine/webpack/runtime/hasOwnProperty shorthand","webpack://SlotMachine/./lib/raf.ts","webpack://SlotMachine/./lib/timer.ts","webpack://SlotMachine/./lib/slot-machine.ts","webpack://SlotMachine/./lib/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SlotMachine\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SlotMachine\"] = factory();\n\telse\n\t\troot[\"SlotMachine\"] = factory();\n})(self, () => {\nreturn ","// Generated by CoffeeScript 1.12.2\n(function() {\n  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    moduleLoadTime = getNanoSeconds();\n    upTime = process.uptime() * 1e9;\n    nodeLoadTime = moduleLoadTime - upTime;\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n\n//# sourceMappingURL=performance-now.js.map\n","var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import requestAnimationFrame from 'raf';\nimport { Callback } from './types';\n\nexport default function raf(cb: Callback, timeout = 0) {\n  setTimeout(() => requestAnimationFrame(cb), timeout);\n}\n","import { Callback } from './types';\n\nexport default class Timer {\n  cb: Callback;\n  initialDelay: number;\n  delay: number;\n  startTime: number;\n  timer: NodeJS.Timeout;\n  running: boolean;\n\n  constructor(cb: Callback, delay: number) {\n    this.cb = cb;\n    this.initialDelay = delay;\n    this.delay = delay;\n    this.running = false;\n\n    this.resume();\n\n    return this;\n  }\n\n  _start() {\n    this.timer = setTimeout(() => {\n      this.running = false;\n      this.cb(this);\n    }, this.delay);\n  }\n\n  cancel() {\n    this.running = false;\n    clearTimeout(this.timer);\n  }\n\n  pause() {\n    if (this.running) {\n      this.delay -= new Date().getTime() - this.startTime;\n      this.cancel();\n    }\n  }\n\n  resume() {\n    if (!this.running) {\n      this.running = true;\n      this.startTime = new Date().getTime();\n\n      this._start();\n    }\n  }\n\n  reset() {\n    this.cancel();\n    this.delay = this.initialDelay;\n    this._start();\n  }\n\n  add(extraDelay: number) {\n    this.pause();\n    this.delay += extraDelay;\n    this.resume();\n  }\n}\n","import raf from './raf';\nimport Timer from './timer';\n\nexport type RandomizeCallback = (active: number) => number;\nexport type OnCompleteCallback = (active: number) => any;\n\nexport type Direction = 'up' | 'down';\n\nexport type Bound = {\n  key: Direction;\n  initial: number;\n  first: number;\n  last: number;\n  to: number;\n  firstToLast: number;\n  lastToFirst: number;\n};\n\nexport type Bounds = Record<Direction, Bound>;\n\nexport type Options = {\n  active?: number;\n  delay?: number;\n  auto?: boolean;\n  spins?: number;\n  randomize?: RandomizeCallback;\n  onComplete?: OnCompleteCallback;\n  inViewport?: boolean;\n  direction?: Direction;\n  transition?: string;\n};\n\nconst defaults: Options = {\n  active: 0, // Active element [Number]\n  delay: 200, // Animation time [Number]\n  auto: false, // Repeat delay [false||Number]\n  spins: 5, // Number of spins when auto [Number]\n  randomize: undefined, // Randomize function, must return a number with the selected position\n  onComplete: undefined, // Callback function(result)\n  inViewport: true, // Stops animations if the element isn´t visible on the screen\n  direction: 'up', // Animation direction ['up'||'down']\n  transition: 'ease-in-out',\n};\n\nexport enum FX {\n  NO_TRANSITION = 'slotMachineNoTransition',\n  FAST = 'slotMachineBlurFast',\n  NORMAL = 'slotMachineBlurMedium',\n  SLOW = 'slotMachineBlurSlow',\n  TURTLE = 'slotMachineBlurTurtle',\n  GRADIENT = 'slotMachineGradient',\n  STOP = 'slotMachineGradient',\n}\n\nexport default class SlotMachine implements Options {\n  container: HTMLElement;\n  element: HTMLElement;\n  tiles: HTMLElement[];\n  running: boolean;\n  stopping: boolean;\n  nextActive?: number;\n\n  // options\n  delay: number;\n  auto: boolean;\n  spins: number;\n  randomize?: RandomizeCallback;\n  onComplete?: OnCompleteCallback;\n  inViewport: boolean;\n\n  private _active: number;\n  private _minTop: number;\n  private _maxTop: number;\n  private _fakeFirstTile: HTMLElement;\n  private _fakeLastTile: HTMLElement;\n  private _bounds: Bounds;\n  private _direction: Direction;\n  private _transition: string;\n  private _timer: Timer;\n\n  constructor(element: HTMLElement, options: Options) {\n    this.element = element;\n    // Slot Machine elements\n    this.tiles = [].slice.call(this.element.children) as HTMLElement[];\n    // Machine is running?\n    this.running = false;\n    // Machine is stopping?\n    this.stopping = false;\n    // Disable overflow\n    this.element.style.overflow = 'hidden';\n    // Wrap elements inside container\n    this._wrapTiles();\n    // Set min top offset\n    this._minTop = -this._fakeFirstTile.offsetHeight;\n    // Set max top offset\n    this._maxTop = -this.tiles.reduce((acc, tile) => acc + tile.offsetHeight, 0);\n    // Call setters if neccesary\n    this.changeSettings({ ...defaults, ...options });\n    // Initialize spin direction [up, down]\n    this._setBounds();\n    // Show active element\n    this._resetPosition();\n    // Start auto animation\n    if (this.auto) {\n      this.run();\n    }\n  }\n\n  changeSettings(options: Options) {\n    Object.keys(options).forEach((key) => {\n      // Trigger setters\n      this[key] = options[key]; /* @ts-ignore */\n    });\n  }\n\n  _wrapTiles() {\n    this.container = document.createElement('div');\n    this.container.classList.add('slotMachineContainer');\n    this.container.style.transition = '1s ease-in-out';\n    this.element.appendChild(this.container);\n\n    this._fakeFirstTile = this.tiles[this.tiles.length - 1].cloneNode(true) as HTMLElement;\n    this.container.appendChild(this._fakeFirstTile);\n\n    this.tiles.forEach((tile) => {\n      this.container.appendChild(tile);\n    });\n\n    this._fakeLastTile = this.tiles[0].cloneNode(true) as HTMLElement;\n    this.container.appendChild(this._fakeLastTile);\n  }\n\n  _setBounds() {\n    const initial = this.getTileOffset(this.active);\n    const first = this.getTileOffset(this.tiles.length);\n    const last = this.getTileOffset(this.tiles.length);\n\n    this._bounds = {\n      up: {\n        key: 'up',\n        initial,\n        first: 0,\n        last,\n        to: this._maxTop,\n        firstToLast: last,\n        lastToFirst: 0,\n      },\n      down: {\n        key: 'down',\n        initial,\n        first,\n        last: 0,\n        to: this._minTop,\n        firstToLast: last,\n        lastToFirst: 0,\n      },\n    };\n  }\n\n  get active() {\n    return this._active;\n  }\n\n  set active(index: number) {\n    if (index < 0 || index >= this.tiles.length || isNaN(index)) {\n      index = 0;\n    }\n\n    this._active = index;\n  }\n\n  get direction() {\n    return this._direction;\n  }\n\n  set direction(direction: Direction) {\n    if (this.running) {\n      return;\n    }\n\n    this._direction = direction === 'down' ? 'down' : 'up';\n  }\n\n  get bounds() {\n    return this._bounds[this._direction];\n  }\n\n  get transition() {\n    return this._transition;\n  }\n\n  set transition(transition: string) {\n    this._transition = transition || 'ease-in-out';\n  }\n\n  get visibleTile() {\n    const firstTileHeight = this.tiles[0].offsetHeight;\n    const rawContainerMargin = this.container.style.transform || '';\n    const matrixRegExp = /^matrix\\(-?\\d+,\\s?-?\\d+,\\s?-?\\d+,\\s?-?\\d+,\\s?-?\\d+,\\s?(-?\\d+)\\)$/;\n    const containerMargin = parseInt(rawContainerMargin.replace(matrixRegExp, '$1'), 10);\n\n    return Math.abs(Math.round(containerMargin / firstTileHeight)) - 1;\n  }\n\n  get random() {\n    return Math.floor(Math.random() * this.tiles.length);\n  }\n\n  get custom() {\n    let choosen = this.random;\n\n    if (this.randomize) {\n      let index = this.randomize(this.active);\n      if (index < 0 || index >= this.tiles.length) {\n        index = 0;\n      }\n      choosen = index;\n    }\n\n    return choosen;\n  }\n\n  get _prevIndex() {\n    const prevIndex = this.active - 1;\n\n    return prevIndex < 0 ? this.tiles.length - 1 : prevIndex;\n  }\n\n  get _nextIndex() {\n    const nextIndex = this.active + 1;\n\n    return nextIndex < this.tiles.length ? nextIndex : 0;\n  }\n\n  get prevIndex() {\n    return this.direction === 'up' ? this._nextIndex : this._prevIndex;\n  }\n\n  get nextIndex() {\n    return this.direction === 'up' ? this._prevIndex : this._nextIndex;\n  }\n\n  get visible() {\n    const rect = this.element.getBoundingClientRect();\n    const windowHeight = window.innerHeight || document.documentElement.clientHeight;\n    const windowWidth = window.innerWidth || document.documentElement.clientWidth;\n    const vertInView = rect.top <= windowHeight && rect.top + rect.height >= 0;\n    const horInView = rect.left <= windowWidth && rect.left + rect.width >= 0;\n\n    return vertInView && horInView;\n  }\n\n  set _animationFX(effect: FX) {\n    const delay = this.delay / 4;\n\n    raf(() => {\n      [...this.tiles, this._fakeLastTile, this._fakeFirstTile].forEach((tile) => {\n        tile.classList.remove(FX.FAST, FX.NORMAL, FX.SLOW, FX.TURTLE);\n        if (effect !== FX.STOP) {\n          tile.classList.add(effect);\n        }\n      });\n\n      if (effect === FX.STOP) {\n        this.container.classList.remove(FX.GRADIENT);\n      } else {\n        this.container.classList.add(FX.GRADIENT);\n      }\n    }, delay);\n  }\n\n  _changeTransition(delay = this.delay, transition = this.transition) {\n    this.container.style.transition = `${delay / 1000}s ${transition}`;\n  }\n\n  _changeTransform(margin: number) {\n    this.container.style.transform = `matrix(1, 0, 0, 1, 0, ${margin})`;\n  }\n\n  _isGoingBackward() {\n    return !!(\n      this.active === 0 &&\n      this.nextActive === this.tiles.length - 1\n    );\n  }\n\n  _isGoingForward() {\n    return !!(\n      this.active === this.tiles.length - 1 &&\n      this.nextActive === 0\n    );\n  }\n\n  getTileOffset(index: number) {\n    let offset = 0;\n\n    for (let i = 0; i < index; i++) {\n      offset += this.tiles[i].offsetHeight;\n    }\n\n    return this._minTop - offset;\n  }\n\n  _resetPosition(margin?: number) {\n    this.container.classList.toggle(FX.NO_TRANSITION);\n    this._changeTransform(margin !== undefined ? margin : this.bounds.initial);\n    // Force reflow, flushing the CSS changes\n    this.container.offsetHeight;\n    this.container.classList.toggle(FX.NO_TRANSITION);\n  }\n\n  next() {\n    this.direction = 'down';\n    this.nextActive = this.nextIndex;\n    this.running = true;\n    this.stop();\n\n    return this.nextActive;\n  }\n\n  prev() {\n    this.direction = 'up';\n    this.nextActive = this.nextIndex;\n    this.running = true;\n    this.stop();\n\n    return this.nextActive;\n  }\n\n  _getDelayFromSpins(spins: number) {\n    let delay = this.delay;\n    this.transition = 'linear';\n\n    switch (spins) {\n      case 1:\n        delay /= 0.5;\n        this.transition = 'ease-out';\n        this._animationFX = FX.TURTLE;\n        break;\n      case 2:\n        delay /= 0.75;\n        this._animationFX = FX.SLOW;\n        break;\n      case 3:\n        delay /= 1;\n        this._animationFX = FX.NORMAL;\n        break;\n      case 4:\n        delay /= 1.25;\n        this._animationFX = FX.NORMAL;\n        break;\n      default:\n        delay /= 1.5;\n        this._animationFX = FX.FAST;\n    }\n\n    return delay;\n  }\n\n  shuffle(spins: number, onComplete: OnCompleteCallback) {\n    // Make spins optional\n    if (typeof spins === 'function') {\n      onComplete = spins;\n    }\n    this.running = true;\n    // Perform animation\n    if (!this.visible && this.inViewport === true) {\n      this.stop(onComplete);\n    } else {\n      const delay = this._getDelayFromSpins(spins);\n      // this.delay = delay;\n      this._changeTransition(delay);\n      this._changeTransform(this.bounds.to);\n      raf(() => {\n        if (!this.stopping && this.running) {\n          const left = spins - 1;\n\n          this._resetPosition(this.bounds.first);\n\n          if (left > 1) {\n            // Repeat animation\n            this.shuffle(left, onComplete);\n          } else {\n            this.stop(onComplete);\n          }\n        }\n      }, delay);\n    }\n\n    return this.nextActive;\n  }\n\n  stop(onStop?: OnCompleteCallback) {\n    if (!this.running || this.stopping) {\n      return this.nextActive;\n    }\n\n    this.running = true;\n    this.stopping = true;\n\n    if (!Number.isInteger(this.nextActive)) {\n      // Get random or custom element\n      this.nextActive = this.custom;\n    }\n\n    // Check direction to prevent jumping\n    if (this._isGoingBackward()) {\n      this._resetPosition(this.bounds.firstToLast);\n    } else if (this._isGoingForward()) {\n      this._resetPosition(this.bounds.lastToFirst);\n    }\n\n    // Update last choosen element index\n    this.active = this.nextActive as number;\n\n    // Perform animation\n    const delay = this._getDelayFromSpins(1);\n    // this.delay = delay;\n    this._changeTransition(delay);\n    this._animationFX = FX.STOP;\n    this._changeTransform(this.getTileOffset(this.active));\n    raf(() => {\n      this.stopping = false;\n      this.running = false;\n      this.nextActive = undefined;\n\n      if (typeof this.onComplete === 'function') {\n        this.onComplete(this.active);\n      }\n\n      if (typeof onStop === 'function') {\n        onStop.apply(this, [this.active]);\n      }\n    }, delay);\n\n    return this.active;\n  }\n\n  run() {\n    if (this.running) {\n      return;\n    }\n\n    this._timer = new Timer(() => {\n      if (!this.visible && this.inViewport === true) {\n        raf(() => {\n          this._timer.reset();\n        }, 500);\n      } else {\n        this.shuffle(this.spins, () => {\n          this._timer.reset();\n        });\n      }\n    }, this.delay);\n  }\n\n  destroy() {\n    this._fakeFirstTile.remove();\n    this._fakeLastTile.remove();\n    // this.$tiles.unwrap();\n\n    // Unwrap tiles\n    this.tiles.forEach((tile) => {\n      this.element.appendChild(tile);\n    });\n\n    this.container.remove();\n  }\n}\n","import SlotMachine from './slot-machine';\n\nexport default SlotMachine;\n"],"names":["root","factory","exports","module","define","amd","self","getNanoSeconds","hrtime","loadTime","moduleLoadTime","nodeLoadTime","upTime","performance","now","process","hr","uptime","Date","getTime","call","this","window","g","vendors","suffix","raf","caf","i","length","last","id","queue","callback","_now","next","Math","max","setTimeout","cp","slice","cancelled","e","round","push","handle","fn","cancel","apply","arguments","polyfill","object","requestAnimationFrame","cancelAnimationFrame","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","globalThis","Function","obj","prop","prototype","hasOwnProperty","cb","timeout","Timer","constructor","delay","initialDelay","running","resume","_start","timer","clearTimeout","pause","startTime","reset","add","extraDelay","defaults","active","auto","spins","randomize","onComplete","inViewport","direction","transition","FX","element","options","tiles","children","stopping","style","overflow","_wrapTiles","_minTop","_fakeFirstTile","offsetHeight","_maxTop","reduce","acc","tile","changeSettings","_setBounds","_resetPosition","run","keys","forEach","container","document","createElement","classList","appendChild","cloneNode","_fakeLastTile","initial","getTileOffset","first","_bounds","up","to","firstToLast","lastToFirst","down","_active","index","isNaN","_direction","bounds","_transition","visibleTile","firstTileHeight","rawContainerMargin","transform","containerMargin","parseInt","replace","abs","random","floor","custom","choosen","_prevIndex","prevIndex","_nextIndex","nextIndex","visible","rect","getBoundingClientRect","windowHeight","innerHeight","documentElement","clientHeight","windowWidth","innerWidth","clientWidth","vertInView","top","height","horInView","left","width","_animationFX","effect","remove","FAST","NORMAL","SLOW","TURTLE","STOP","GRADIENT","_changeTransition","_changeTransform","margin","_isGoingBackward","nextActive","_isGoingForward","offset","toggle","NO_TRANSITION","stop","prev","_getDelayFromSpins","shuffle","onStop","Number","isInteger","_timer","destroy"],"sourceRoot":""}